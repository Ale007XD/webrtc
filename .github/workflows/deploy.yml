name: Deploy WebRTC E2EE System

on:
  push:
    branches: [ main, production ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # ... your existing build steps ...
      
      - name: Setup deployment environment  
        run: |
          echo "=== Deployment Environment Check ==="
          echo "Working directory: $(pwd)"
          echo "Available files:"
          find . -maxdepth 2 -type f -name "*.yml" -o -name "*.yaml" -o -name "docker-compose*"
          echo "Available directories:"
          find . -maxdepth 1 -type d -not -path "./.*"
          echo "=== End Environment Check ==="

      - name: Verify files before transfer
        run: |
          echo "Checking required files..."
          if [ ! -f "docker-compose.yml" ]; then
            echo "‚ùå docker-compose.yml not found"
            exit 1
          fi
          if [ ! -d "proxy" ]; then
            echo "‚ùå proxy/ directory not found"
            exit 1
          fi
          if [ ! -d "turn" ]; then
            echo "‚ùå turn/ directory not found"  
            exit 1
          fi
          if [ ! -d "scripts" ]; then
            echo "‚ùå scripts/ directory not found"
            exit 1
          fi
          echo "‚úÖ All required files found"

      - name: Transfer deployment files
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: |
            docker-compose.yml
            proxy/
            turn/
            scripts/
          target: /opt/webrtc-e2ee/
          overwrite: true

      - name: Deployment notification
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "‚úÖ Deployment successful to ${{ secrets.VPS_HOST }}"
            echo "üåê Application URL: ${{ secrets.APP_PUBLIC_URL }}"
          else
            echo "‚ùå Deployment failed"
          fi

            docker compose down || true
            docker compose pull
            docker compose up -d --remove-orphans

            rm -f .env.deploy
            docker logout ${{ env.REGISTRY }}

      # Healthcheck
      - name: Run health checks
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd /opt/webrtc-e2ee
            sleep 25
            chmod +x scripts/healthcheck.sh || true
            ./scripts/healthcheck.sh || true

      # Cleanup –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –∏ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤
      - name: Cleanup old images
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            docker image prune -f
            docker container prune -f
            # –û—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–µ
            docker images --format "table {{.Repository}}:{{.Tag}}\t{{.CreatedAt}}" | grep -E "(signaling|web)" | sort -k2 -r | tail -n +7 | awk '{print $1}' | xargs -r docker rmi || true

      - name: Deployment notification
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "‚úÖ Deployment successful to ${{ secrets.VPS_HOST }}"
            echo "üåê Application URL: ${{ secrets.APP_PUBLIC_URL }}"
          else
            echo "‚ùå Deployment failed"
